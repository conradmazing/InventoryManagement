package siomai.inventory.app;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
/**
 *
 * @author Conrad Francisco Jr
 */
public class EmployeeList extends javax.swing.JFrame {

    /**
     * Creates new form Logs
     */
    public EmployeeList() {
        initComponents();
        this.refresh();
        this.setLocationRelativeTo(null);
        URL iconURL = getClass().getResource("icon.jpg");
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        this.getContentPane().setBackground(Color.RED);
    }
    public void refresh(){
        //Load data
        if(Methods.openDB()){
            String[] columns = {"EmployeeID", "FirstName", "LastName", "Birthdate", "Gender", "Position"};
            String[][] records = Methods.read("Employees",columns);
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(records, columns){
                @Override
                public boolean isCellEditable(int row, int column) {

                    return false;
                }
            };
            this.tblList.setModel(model);
            
            //Additional COde Snippets for JTABLE behavior
            ListSelectionListener lsl = new ListSelectionListener(){
                public void valueChanged(javax.swing.event.ListSelectionEvent event) {
                    if (tblList.getSelectedRow() > -1) {
                        int row = tblList.getSelectedRow();
                        //JOptionPane.showMessageDialog(null, "Row is " + row);
                        if(Methods.openDB()){
                            String sr_id = tblList.getValueAt(tblList.getSelectedRow(), 0).toString();
                            int id = Integer.parseInt(sr_id);
                            String[][] result = Methods.read("Employees", "EmployeeID=" + id);
                            String name = (result[0][1]+" "+result[0][3]);
                            txtID.setText(result[0][0]);
                            txtName.setText(name);
                            txtType.setText(result[0][9]);
                            
                            try{
                                byte[] in = Methods.read("Employees", "IDPic", id);
                                ImageIcon icon =new ImageIcon(in);

                                //stretching image
                                Toolkit toolkit = Toolkit.getDefaultToolkit();
                                Image image = icon.getImage();
                                Image scaledImage = image.getScaledInstance(152,135, Image.SCALE_DEFAULT);                                                                
                                lblIDPic.setIcon(new javax.swing.ImageIcon(scaledImage));  
                            }
                            catch(Exception e){
                                System.out.println("Error: " + e.getMessage());
                            }
                            Methods.closeDB();
                        }
                    }
                }
            };
            this.tblList.getSelectionModel().addListSelectionListener(lsl);
            Methods.closeDB();
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogs = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        lblLogID = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtType = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        lblLogID1 = new javax.swing.JLabel();
        lblIDPic = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuMain = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Employee List");
        setResizable(false);

        pnlLogs.setBackground(new java.awt.Color(0, 0, 0));

        tblList.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tblList.setForeground(new java.awt.Color(255, 0, 0));
        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "EmployeeID", "First Name", "Family Name", "Birthdate", "Gender", "Position"
            }
        ));
        tblList.getTableHeader().setResizingAllowed(false);
        tblList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblList);

        btnSearch.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 0, 0));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblLogID.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblLogID.setForeground(new java.awt.Color(255, 0, 0));
        lblLogID.setText("ID:");

        lblUsername.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 0, 0));
        lblUsername.setText("Name:");

        lblDate.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 0, 0));
        lblDate.setText("Position:");

        txtID.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        txtID.setForeground(new java.awt.Color(255, 0, 0));
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        txtName.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        txtName.setForeground(new java.awt.Color(255, 0, 0));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtType.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtType.setForeground(new java.awt.Color(255, 0, 0));

        btnDelete.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblLogID1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblLogID1.setForeground(new java.awt.Color(255, 0, 0));
        lblLogID1.setText("ID Picture:");

        lblIDPic.setBackground(new java.awt.Color(204, 204, 204));
        lblIDPic.setForeground(new java.awt.Color(204, 204, 204));
        lblIDPic.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnRefresh.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 0, 0));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLogsLayout = new javax.swing.GroupLayout(pnlLogs);
        pnlLogs.setLayout(pnlLogsLayout);
        pnlLogsLayout.setHorizontalGroup(
            pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLogsLayout.createSequentialGroup()
                        .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLogID1)
                            .addGroup(pnlLogsLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblIDPic, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLogID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDate)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(328, 328, 328))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                        .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(pnlLogsLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnRefresh)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch)))
                        .addGap(10, 10, 10))))
        );
        pnlLogsLayout.setVerticalGroup(
            pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLogsLayout.createSequentialGroup()
                        .addComponent(lblLogID1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIDPic, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                        .addComponent(lblLogID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnDelete)
                    .addComponent(btnRefresh))
                .addContainerGap())
        );

        jMenu1.setText("Menu");

        mnuMain.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        mnuMain.setText("Main Menu");
        mnuMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuMainActionPerformed(evt);
            }
        });
        jMenu1.add(mnuMain);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlLogs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlLogs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        int id = Integer.parseInt(txtID.getText());
        if(Methods.openDB()){
            String[] column = {"EmployeeID","FirstName","LastName","Birthdate","Gender","Position"};
            String[][] data = Methods.search("Employees", id);
            String name = (data[0][1]+" "+data[0][2]);
                txtName.setText(name);
                txtType.setText(data[0][5]);
                try{
                    byte[] in = Methods.read("Employees", "IDPic", id);
                    ImageIcon icon =new ImageIcon(in);

                    Toolkit toolkit = Toolkit.getDefaultToolkit();
                    Image image = icon.getImage();
                    Image scaledImage = image.getScaledInstance(152,135, Image.SCALE_DEFAULT);                                                                
                     lblIDPic.setIcon(new javax.swing.ImageIcon(scaledImage));  
                }
                catch(Exception e){
                    System.out.println("Error: " + e.getMessage());
                }
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(data, column){
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };
            this.tblList.setModel(model);
        }
        Methods.closeDB();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to delete user??", "Delete Employee Details", dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION) {
            if(Methods.openDB()){
            int id = Integer.parseInt(txtID.getText());
                String type = txtType.getText();
                System.out.println(type);
            
                    if(Methods.deleteuser("Employees", id)){
                   
                        javax.swing.JOptionPane.showMessageDialog(null, "User Records has been Deleted");
                        txtID.setText(null);
                        txtType.setText(null);
                        lblIDPic.setIcon(null);
                        txtName.setText(null);
                    }      
                    else{
                
                        javax.swing.JOptionPane.showMessageDialog(null, "Error!!");
                    }       
                Methods.closeDB();
                this.refresh();
            }
        }
        else if(dialogResult == JOptionPane.NO_OPTION){
            
            new EmployeeList().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void mnuMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuMainActionPerformed
        
        new MainMenuAdmin().setVisible(true);
        dispose();
    }//GEN-LAST:event_mnuMainActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            int id = Integer.parseInt(txtID.getText());
            if(Methods.openDB()){
                String[] column = {"EmployeeID","FirstName","LastName","Birthdate","Gender","Position"};
                String[][] data = Methods.search("Employees", id);
                String name = (data[0][1]+" "+data[0][2]);
                txtName.setText(name);
                txtType.setText(data[0][5]);
                try{
                    byte[] in = Methods.read("Employees", "IDPic", id);
                    ImageIcon icon =new ImageIcon(in);

                    Toolkit toolkit = Toolkit.getDefaultToolkit();
                    Image image = icon.getImage();
                    Image scaledImage = image.getScaledInstance(152,135, Image.SCALE_DEFAULT);                                                                
                     lblIDPic.setIcon(new javax.swing.ImageIcon(scaledImage));  
                }
                catch(Exception e){
                    System.out.println("Error: " + e.getMessage());
                }
                javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(data, column){
                    boolean[] canEdit = new boolean[]{
                    false, false, false, false
                    };
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                    }
                };
            this.tblList.setModel(model);
            }
        Methods.closeDB();
        }
    }//GEN-LAST:event_txtIDKeyPressed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
       
        this.refresh();
        txtID.setText(null);
        txtType.setText(null);
        lblIDPic.setIcon(null);
        txtName.setText(null);
        
        
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblIDPic;
    private javax.swing.JLabel lblLogID;
    private javax.swing.JLabel lblLogID1;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JMenuItem mnuMain;
    private javax.swing.JPanel pnlLogs;
    private javax.swing.JTable tblList;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables
}
